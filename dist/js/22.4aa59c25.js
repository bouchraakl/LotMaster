"use strict";(self["webpackChunkparking_final"]=self["webpackChunkparking_final"]||[]).push([[22],{1757:function(t,e,a){a.d(e,{Z:function(){return r}});var s=a(7327),i=a(4161);class r{constructor(){(0,s.Z)(this,"axiosClient",void 0),this.axiosClient=i.Z.create({baseURL:"http://localhost:8081",headers:{"Content-type":"application/json"}})}async findByNome(t){try{const e=await i.Z.get(`http://localhost:8081/api/marca/nome?nome=${t}`);return e.data}catch(e){return Promise.reject(e)}}async findById(t){try{const e=await this.axiosClient.get(`/api/marca/${t}`);return e.data}catch(e){return Promise.reject(e)}}async findAll(){try{const t=await this.axiosClient.get("/api/marca/all");return t.data}catch(t){return console.error(t),[]}}async save(t){try{const e=await this.axiosClient.post("/api/marca",t);return e.data}catch(e){return Promise.reject(e)}}async update(t){try{const e=await this.axiosClient.put("http://localhost:8081/api/marca",t);return e.data}catch(e){return Promise.reject(e)}}async delete(t){try{await this.axiosClient.delete(`/api/marca?id=${t}`)}catch(e){return Promise.reject(e.response)}}async findByFiltrosPaginado(t){try{let e="";return e+=`page=${t.currentPage}`,e+=`&size=${t.pageSize}`,(await this.axiosClient.get(`/api/marca?${e}`)).data}catch(e){return Promise.reject(e.response)}}}},6800:function(t,e,a){a.d(e,{v:function(){return r}});var s=a(7327),i=a(4161);class r{constructor(){(0,s.Z)(this,"axiosClient",void 0),this.axiosClient=i.Z.create({baseURL:"http://localhost:8081",headers:{"Content-type":"application/json"}})}async findById(t){try{const e=await this.axiosClient.get(`/api/modelo/${t}`);return e.data}catch(e){return Promise.reject(e)}}async findByNome(t){try{const e=await i.Z.get(`http://localhost:8081/api/modelo/nome?nome=${t}`);return e.data}catch(e){return Promise.reject(e)}}async findAll(){try{const t=await this.axiosClient.get("/api/modelo/all");return t.data}catch(t){return console.error(t),[]}}async save(t){try{const e=await this.axiosClient.post("/api/modelo",t);return e.data}catch(e){return Promise.reject(e)}}async update(t){try{const e=await this.axiosClient.put("http://localhost:8081/api/modelo",t);return e.data}catch(e){return Promise.reject(e)}}async delete(t){try{await this.axiosClient.delete(`http://localhost:8081/api/modelo?id=${t}`)}catch(e){return Promise.reject(e.response)}}async findByFiltrosPaginado(t){try{let e="";return e+=`page=${t.currentPage}`,e+=`&size=${t.pageSize}`,(await this.axiosClient.get(`/api/modelo?${e}`)).data}catch(e){return Promise.reject(e.response)}}}},8167:function(t,e,a){a.d(e,{F:function(){return i}});var s=a(7327);class i{constructor(){(0,s.Z)(this,"id",void 0),(0,s.Z)(this,"cadastro",void 0),(0,s.Z)(this,"atualizacao",void 0),(0,s.Z)(this,"ativo",void 0),this.ativo=!0}}},4164:function(t,e,a){a.d(e,{h:function(){return r}});var s=a(7327),i=a(8167);class r extends i.F{constructor(){super(),(0,s.Z)(this,"nome",void 0),this.ativo=!0}}},4753:function(t,e,a){a.d(e,{Z:function(){return o}});var s=a(7327),i=a(8167),r=a(4164);class o extends i.F{constructor(){super(),(0,s.Z)(this,"nome",void 0),(0,s.Z)(this,"marca",void 0),this.ativo=!0,this.marca=new r.h}}},22:function(t,e,a){a.r(e),a.d(e,{default:function(){return j}});var s=a(3396),i=a(7139),r=a(9242);const o=t=>((0,s.dD)("data-v-bb1f5d3e"),t=t(),(0,s.Cn)(),t),n={class:"access-content d-flex flex-column align-items-start justify-content-start"},c={class:"title-pages"},l={class:"form-application d-flex flex-column custom-section"},d={class:"d-flex align-items-center align-self-start gap-3"},m={class:"d-flex flex-column"},u=o((()=>(0,s._)("label",{for:"brands",class:"form-label"},"Associated Brand",-1))),h={id:"datalistOptions"},p=["value"],f={class:"d-flex align-items-center align-self-start gap-3"},g={class:"d-flex flex-column"},y=o((()=>(0,s._)("label",{for:"modelname",class:"form-label"},"Model Name",-1))),v={class:"mt-3 d-flex align-items-center gap-3"},x=o((()=>(0,s._)("button",{type:"submit"},"Update Vehicle Model",-1)));function w(t,e,a,o,w,b){return(0,s.wg)(),(0,s.iD)("div",n,[(0,s._)("p",c,"Edit : "+(0,i.zw)(t.modelName),1),(0,s._)("div",l,[(0,s._)("form",{class:"form-app d-flex flex-column align-items-start mt-4 h-100 gap-3",onSubmit:e[3]||(e[3]=(0,r.iM)(((...e)=>t.submitForm&&t.submitForm(...e)),["prevent"]))},[(0,s._)("div",d,[(0,s._)("div",m,[u,(0,s.wy)((0,s._)("input",{class:"form-control",list:"datalistOptions",id:"brands",style:{width:"300px"},"onUpdate:modelValue":e[0]||(e[0]=e=>t.associatedBrand=e)},null,512),[[r.nr,t.associatedBrand]]),(0,s._)("datalist",h,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(t.datalistOptions,(t=>((0,s.wg)(),(0,s.iD)("option",{value:t},null,8,p)))),256))])])]),(0,s._)("div",f,[(0,s._)("div",g,[y,(0,s.wy)((0,s._)("input",{class:"form-control",id:"modelname",style:{width:"300px"},"onUpdate:modelValue":e[1]||(e[1]=e=>t.modelName=e)},null,512),[[r.nr,t.modelName]])])]),(0,s._)("div",v,[x,(0,s._)("button",{type:"button",onClick:e[2]||(e[2]=(...e)=>t.cancelEdit&&t.cancelEdit(...e))},"Cancel"),(0,s._)("p",{class:(0,i.C_)(["error-message","success"===t.errorMessage.status?"text-success":"text-danger"])},(0,i.zw)(t.errorMessage.message),3)])],32)])])}a(7658);var b=a(1757),C=a(6800),M=a(4753),_=(0,s.aZ)({data(){return{editedmodel:new M.Z,models:[],datalistOptions:[],errorMessage:{status:"",message:""},associatedBrand:"",modelName:""}},mounted(){this.fetchItems().then((()=>{const t=new b.Z;return t.findAll()})).then((t=>{this.datalistOptions=t.map((t=>t.nome)),console.log(this.datalistOptions)})).catch((t=>{console.error("Failed to fetch model data:",this.datalistOptions)}))},computed:{modelClient(){return new C.v}},methods:{async submitForm(){if(!this.modelName)return this.errorMessage.status="error",void(this.errorMessage.message="Model name cannot be null.");if(!this.associatedBrand)return this.errorMessage.status="error",void(this.errorMessage.message="Brand cannot be null.");this.editedmodel.nome=this.modelName,this.editedmodel.marca.nome=this.associatedBrand;try{this.editedmodel.id=Number(this.$route.params.editModelId),await this.fetchBrandId(),await this.modelClient.update(this.editedmodel),this.errorMessage.status="success",this.errorMessage.message="Model edited successfully"}catch(t){if(this.errorMessage.status="error",t.response&&t.response.data){const e=Object.values(t.response.data);this.errorMessage.message=e.join(", ")}else this.errorMessage.message="An error occurred during updating."}},async fetchBrandId(){try{const t=new b.Z,e=await t.findByNome(this.editedmodel.marca.nome);e&&e.id?this.editedmodel.marca.id=e.id:console.error("Brand not found")}catch(t){console.error("Failed to fetch brand ID:",t)}},async fetchItems(){const t=Number(this.$route.params.editModelId);if(isNaN(t))console.log("Invalid editModelId parameter");else try{const e=await this.modelClient.findById(t);this.modelName=e.nome,this.associatedBrand=e.marca.nome,this.editedmodel=e,console.log(e)}catch(e){console.log(e)}},cancelEdit(){this.$router.push("/access-vehicleModel")}}}),Z=a(89);const B=(0,Z.Z)(_,[["render",w],["__scopeId","data-v-bb1f5d3e"]]);var j=B}}]);
//# sourceMappingURL=22.4aa59c25.js.map